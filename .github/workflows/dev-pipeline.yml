name: Development Deploy

on:
  push:
    branches:
    - dev

permissions:
  id-token: write # <-- required for OIDC to AWS
  contents: read

jobs:
  test_and_deploy_dev:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    env:
      AWS_REGION: eu-west-1
      CDK_STACKS: MyAppRunnerStack

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start containers
        run: docker compose -f "docker-compose.test.yml" up -d --build

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          working-directory: ./client
          wait-on: 'http://localhost:3000'
          browser: chrome

      - name: Stop containers
        if: always()
        run: docker compose -f "docker-compose.test.yml" down

      # AWS CDK Deploy backend
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::171756462962:role/Github_Actions_Recipeapp_CDK_Deploy

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: |
            cdk/package-lock.json
            package-lock.json

      - name: Install CDK app deps
        working-directory: cdk
        run: |
          npm ci
          npm i -g aws-cdk@latest

      - name: cdk diff (optional)
        working-directory: cdk
        run: cdk diff $CDK_STACKS || true

      - name: cdk deploy
        working-directory: cdk
        run: cdk deploy $CDK_STACKS --require-approval=never --verbose


      # Deploy client to Vercel
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
